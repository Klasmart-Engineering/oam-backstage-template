apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: oam-backstage-template
  title: OAM Backstage Template
  description: Generate a repository with an OAM file that uses Crossplane to stand up AWS cloud resources against Localstack
  tags:
    - factory
    - oam
    - crossplane
spec:
  owner: KL-Engineering
  type: service
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: oam-template
      name: OAM Backstage template
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: ./skeleton
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: publish-oam-backstage-template
      name: Publish OAM backstage repository
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        sourcePath: ./skeleton

    - id: register-oam-template
      name: Register OAM template
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-oam-backstage-template'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml" 
    
   
  output:
    links:
      - title: OAM application Repository
        url: ${{ steps.['publish-oam-backstage-template'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.['register-oam-template'].output.entityRef }}
 